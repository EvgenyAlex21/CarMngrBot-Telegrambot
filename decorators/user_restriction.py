from core.imports import wraps
from core.bot_instance import bot

# ---------------------- –î–ï–ö–û–†–ê–¢–û–†–´ (–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º) ---------------

def restricted(func):
    def wrapper(message, *args, **kwargs):
        try:
            from handlers.admin.ban.ban import is_user_blocked as _is_blocked
            from handlers.admin.ban.ban import get_user_id_by_username as _get_uid
        except Exception:
            _is_blocked = lambda _uid: False
            _get_uid = lambda _username: None

        user_id = message.from_user.id
        username = message.from_user.username

        try:
            if _is_blocked(user_id):
                bot.send_message(message.chat.id, "üö´ –í—ã *–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã* –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ!", parse_mode="Markdown")
                return
            if username:
                uid = _get_uid(username)
                if uid and _is_blocked(uid):
                    bot.send_message(message.chat.id, "üö´ –í—ã *–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã* –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ!", parse_mode="Markdown")
                    return
        except Exception:
            pass

        return func(message, *args, **kwargs)
    return wrapper
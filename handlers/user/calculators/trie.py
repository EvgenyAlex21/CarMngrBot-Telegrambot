from core.imports import wraps, telebot, types, os, json, re, requests, datetime, timedelta, ReplyKeyboardMarkup, ReplyKeyboardRemove, pd, Workbook, load_workbook, Alignment, Border, Side, Font, PatternFill, openpyxl
from core.bot_instance import bot, BASE_DIR
from telebot.types import ReplyKeyboardMarkup, ReplyKeyboardRemove
from handlers.user.user_main_menu import return_to_menu
from handlers.user.calculators.calculators_main import return_to_calculators
from ..utils import (
    restricted, track_user_activity, check_chat_state, check_user_blocked,
    log_user_actions, check_subscription_chanal, text_only_handler,
    rate_limit_with_captcha, check_function_state_decorator, track_usage, check_subscription
)

# ------------------------------------------- –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–´_–®–ò–ù–´ --------------------------------------------------

@bot.message_handler(func=lambda message: message.text == "–®–∏–Ω—ã")
@check_function_state_decorator('–®–∏–Ω—ã')
@track_usage('–®–∏–Ω—ã')
@restricted
@track_user_activity
@check_chat_state
@check_user_blocked
@log_user_actions
@check_subscription
@check_subscription_chanal
@text_only_handler
@rate_limit_with_captcha
def view_tire_calc(message, show_description=True):
    description = (
        "‚ÑπÔ∏è *–ö—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ —à–∏–Ω–Ω–æ–º—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É*\n\n"
        "üìå *–†–∞—Å—á–µ—Ç —à–∏–Ω –∏ –¥–∏—Å–∫–æ–≤:*\n"
        "–†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö - *—à–∏—Ä–∏–Ω–∞, –ø—Ä–æ—Ñ–∏–ª—å –∏ –¥–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω, —à–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –∏ –≤—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–æ–≤—ã—Ö —à–∏–Ω –∏ –¥–∏—Å–∫–æ–≤*\n\n"
        "_P.S. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è. –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è!_\n\n"
        "üìå *–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—á–µ—Ç–æ–≤:*\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–∞—Å—á–µ—Ç—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n\n"
        "üìå *–£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–æ–≤:*\n"
        "–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ —Ä–∞—Å—á–µ—Ç—ã, –µ—Å–ª–∏ –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã"
    )

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —à–∏–Ω—ã', '–ü—Ä–æ—Å–º–æ—Ç—Ä —à–∏–Ω', '–£–¥–∞–ª–µ–Ω–∏–µ —à–∏–Ω')
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
    markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    if show_description:
        bot.send_message(message.chat.id, description, parse_mode='Markdown')

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

TIRE_HISTORY_PATH = os.path.join('data', 'user', 'calculators', 'tires', 'tire_users.json')
TIRE_EXCEL_DIR = os.path.join('data', 'user', 'calculators', 'tires', 'excel')

user_data = {}
user_history_tire = {}

def ensure_path_and_file(file_path):
    os.makedirs(os.path.dirname(file_path), exist_ok=True)
    if not os.path.exists(file_path):
        with open(file_path, 'w', encoding='utf-8') as f:
            json.dump({}, f, ensure_ascii=False, indent=2)

def load_user_history_tires():
    global user_history_tire
    try:
        if os.path.exists(TIRE_HISTORY_PATH):
            with open(TIRE_HISTORY_PATH, 'r', encoding='utf-8') as db_file:
                user_history_tire = json.load(db_file)
        else:
            user_history_tire = {}
    except Exception as e:
        user_history_tire = {}

def save_user_history_tires():
    try:
        with open(TIRE_HISTORY_PATH, 'w', encoding='utf-8') as db_file:
            json.dump(user_history_tire, db_file, ensure_ascii=False, indent=2)
    except Exception as e:
        pass

ensure_path_and_file(TIRE_HISTORY_PATH)
os.makedirs(TIRE_EXCEL_DIR, exist_ok=True)
load_user_history_tires()

# ------------------------------------------- –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–´_–®–ò–ù–´ (—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —à–∏–Ω—ã) --------------------------------------------------

@bot.message_handler(func=lambda message: message.text == "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —à–∏–Ω—ã")
@check_function_state_decorator('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —à–∏–Ω—ã')
@track_usage('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —à–∏–Ω—ã')
@restricted
@track_user_activity
@check_chat_state
@check_user_blocked
@log_user_actions
@check_subscription
@check_subscription_chanal
@text_only_handler
@rate_limit_with_captcha
def start_tire_calculation(message):
    user_id = message.from_user.id
    user_data[user_id] = {'user_id': user_id, 'username': message.from_user.username or 'unknown'}

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
    markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 135 –¥–æ 405 —Å —à–∞–≥–æ–º 10_", reply_markup=markup, parse_mode='Markdown')
    bot.register_next_step_handler(msg, process_current_width_step)

@text_only_handler
def process_current_width_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return 
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        width = int(message.text)
        if width < 135 or width > 405 or (width - 135) % 10 != 0:
            raise ValueError
        user_data[user_id]['current_width'] = width
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 30 –¥–æ 80 —Å —à–∞–≥–æ–º 5_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_current_profile_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 135 –¥–æ 405 —Å —à–∞–≥–æ–º 10", reply_markup=markup)
        bot.register_next_step_handler(msg, process_current_width_step)

@text_only_handler
def process_current_profile_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        profile = int(message.text)
        if profile < 30 or profile > 80 or (profile - 30) % 5 != 0:
            raise ValueError
        user_data[user_id]['current_profile'] = profile
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–¥—é–π–º—ã):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 12 –¥–æ 24 —Å —à–∞–≥–æ–º 1_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_current_diameter_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 30 –¥–æ 80 —Å —à–∞–≥–æ–º 5", reply_markup=markup)
        bot.register_next_step_handler(msg, process_current_profile_step)

@text_only_handler
def process_current_diameter_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        diameter = int(message.text)
        if diameter < 12 or diameter > 24:
            raise ValueError
        user_data[user_id]['current_diameter'] = diameter
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–¥—é–π–º—ã):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 4 –¥–æ 13 —Å —à–∞–≥–æ–º 0.5_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_current_rim_width_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 12 –¥–æ 24", reply_markup=markup)
        bot.register_next_step_handler(msg, process_current_diameter_step)

@text_only_handler
def process_current_rim_width_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        rim_width = float(message.text.replace(',', '.'))
        if rim_width < 4 or rim_width > 13 or (rim_width * 2 % 1 != 0):
            raise ValueError
        user_data[user_id]['current_rim_width'] = rim_width
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç -55 –¥–æ 65 —Å —à–∞–≥–æ–º 1_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_current_et_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 4 –¥–æ 13 —Å —à–∞–≥–æ–º 0.5", reply_markup=markup)
        bot.register_next_step_handler(msg, process_current_rim_width_step)

@text_only_handler
def process_current_et_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        et = int(message.text)
        if et < -55 or et > 65:
            raise ValueError
        user_data[user_id]['current_et'] = et
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 135 –¥–æ 405 —Å —à–∞–≥–æ–º 10_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_new_width_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç -55 –¥–æ 65", reply_markup=markup)
        bot.register_next_step_handler(msg, process_current_et_step)

@text_only_handler
def process_new_width_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        width = int(message.text)
        if width < 135 or width > 405 or (width - 135) % 10 != 0:
            raise ValueError
        user_data[user_id]['new_width'] = width
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 30 –¥–æ 80 —Å —à–∞–≥–æ–º 5_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_new_profile_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 135 –¥–æ 405 —Å —à–∞–≥–æ–º 10", reply_markup=markup)
        bot.register_next_step_handler(msg, process_new_width_step)

@text_only_handler
def process_new_profile_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        profile = int(message.text)
        if profile < 30 or profile > 80 or (profile - 30) % 5 != 0:
            raise ValueError
        user_data[user_id]['new_profile'] = profile
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–¥—é–π–º—ã):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 12 –¥–æ 24 —Å —à–∞–≥–æ–º 1_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_new_diameter_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 30 –¥–æ 80 —Å —à–∞–≥–æ–º 5", reply_markup=markup)
        bot.register_next_step_handler(msg, process_new_profile_step)

@text_only_handler
def process_new_diameter_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        diameter = int(message.text)
        if diameter < 12 or diameter > 24:
            raise ValueError
        user_data[user_id]['new_diameter'] = diameter
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–¥—é–π–º—ã):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç 4 –¥–æ 13 —Å —à–∞–≥–æ–º 0.5_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_new_rim_width_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 12 –¥–æ 24", reply_markup=markup)
        bot.register_next_step_handler(msg, process_new_diameter_step)

@text_only_handler
def process_new_rim_width_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        rim_width = float(message.text.replace(',', '.'))
        if rim_width < 4 or rim_width > 13 or (rim_width * 2 % 1 != 0):
            raise ValueError
        user_data[user_id]['new_rim_width'] = rim_width
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º):\n\n_P.S. –≤–≤–æ–¥ –æ—Ç -55 –¥–æ 65 —Å —à–∞–≥–æ–º 1_", reply_markup=markup, parse_mode='Markdown')
        bot.register_next_step_handler(msg, process_new_et_step)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 4 –¥–æ 13 —Å —à–∞–≥–æ–º 0.5", reply_markup=markup)
        bot.register_next_step_handler(msg, process_new_rim_width_step)

@text_only_handler
def process_new_et_step(message):
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    try:
        et = int(message.text)
        if et < -55 or et > 65:
            raise ValueError
        user_data[user_id]['new_et'] = et
        calculate_tire(message)
    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        msg = bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç -55 –¥–æ 65", reply_markup=markup)
        bot.register_next_step_handler(msg, process_new_et_step)

@text_only_handler
def calculate_tire(message):
    user_id = message.from_user.id
    data = user_data[user_id]

    current_diameter_mm = data['current_diameter'] * 25.4
    new_diameter_mm = data['new_diameter'] * 25.4
    current_rim_width_mm = data['current_rim_width'] * 25.4
    new_rim_width_mm = data['new_rim_width'] * 25.4

    current_profile_height = data['current_width'] * (data['current_profile'] / 100)
    new_profile_height = data['new_width'] * (data['new_profile'] / 100)

    current_total_diameter = current_diameter_mm + 2 * current_profile_height
    new_total_diameter = new_diameter_mm + 2 * new_profile_height

    diameter_diff_mm = new_total_diameter - current_total_diameter
    diameter_diff_percent = (diameter_diff_mm / current_total_diameter) * 100

    clearance_diff = diameter_diff_mm / 2
    speed_diff_percent = -diameter_diff_percent
    rim_width_diff_mm = new_rim_width_mm - current_rim_width_mm

    recommendation = "‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç" if abs(diameter_diff_percent) <= 3 and abs(rim_width_diff_mm) <= 25.4 else "‚ö†Ô∏è –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ > 3% –∏–ª–∏ —à–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)"

    width_effects = ""
    if data['new_width'] > data['current_width']:
        width_effects = (
            "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è —à–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã:*\n\n"
            "‚úÖ –õ—É—á—à–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–∑–∞–¥–∏\n"
            "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –∏ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–µ (–ª–µ—Ç–æ)\n"
            "‚úÖ –£–≤–µ–ª–∏—á–∏—Ç—Å—è —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã —à–∏–Ω—ã\n"
            "‚ùå –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—Å—è —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞\n"
            "‚ùå –†–∏—Å–∫ –∑–∞—Ç–∏—Ä–∞–Ω–∏—è –ø–æ–¥–∫—Ä—ã–ª–∫–æ–≤\n"
        )
    elif data['new_width'] < data['current_width']:
        width_effects = (
            "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è —à–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã:*\n\n"
            "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ –ª—å–¥—É –∏ —Å–Ω–µ–≥—É\n"
            "‚úÖ –£–º–µ–Ω—å—à–∏—Ç—Å—è —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞\n"
            "‚ùå –£—Ö—É–¥—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ (–ª–µ—Ç–æ)\n"
            "‚ùå –°–æ–∫—Ä–∞—Ç–∏—Ç—Å—è —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã —à–∏–Ω—ã\n"
        )

    profile_effects = ""
    if new_profile_height > current_profile_height:
        profile_effects = (
            "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è –≤—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è:*\n\n"
            "‚úÖ –ú–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –º—è–≥—á–µ\n"
            "‚úÖ –ú–µ–Ω—å—à–µ —Ä–∏—Å–∫ –ø–æ–≤—Ä–µ–¥–∏—Ç—å —à–∏–Ω—É/–¥–∏—Å–∫\n"
            "‚ùå –•—É–∂–µ –¥–µ—Ä–∂–∏—Ç –¥–æ—Ä–æ–≥—É –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
        )
    elif new_profile_height < current_profile_height:
        profile_effects = (
            "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è –≤—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è:*\n\n"
            "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å\n"
            "‚ùå –ú–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –∂–µ—Å—Ç—á–µ\n"
            "‚ùå –ë–æ–ª—å—à–µ —Ä–∏—Å–∫ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –¥–∏—Å–∫/—à–∏–Ω—É\n"
        )

    clearance_effects = ""
    if clearance_diff > 0:
        clearance_effects = (
            "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è –∫–ª–∏—Ä–µ–Ω—Å:*\n\n"
            "‚úÖ –ö–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ –Ω–∞ —è–º–∞—Ö –∏ –±–µ–∑–¥–æ—Ä–æ–∂—å–µ\n"
            "‚ùå –£—Ö—É–¥—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
            "‚ùå –†–∏—Å–∫ –∑–∞—Ç–∏—Ä–∞–Ω–∏—è –ø–æ–¥–∫—Ä—ã–ª–∫–æ–≤\n"
            f"‚ùå –°–ø–∏–¥–æ–º–µ—Ç—Ä –∑–∞–Ω–∏–∂–∞–µ—Ç –Ω–∞ {abs(speed_diff_percent):.1f}%\n"
        )
    elif clearance_diff < 0:
        clearance_effects = (
            "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è –∫–ª–∏—Ä–µ–Ω—Å:*\n\n"
            "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
            "‚ùå –ú–µ–Ω–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —è–º–∞—Ö\n"
            f"‚ùå –°–ø–∏–¥–æ–º–µ—Ç—Ä –∑–∞–≤—ã—à–∞–µ—Ç –Ω–∞ {abs(speed_diff_percent):.1f}%\n"
        )

    current_tire = f"{data['current_width']}/{data['current_profile']} R{data['current_diameter']}"
    current_rim = f"{data['current_rim_width']}x{data['current_diameter']} ET {data['current_et']}"
    new_tire = f"{data['new_width']}/{data['new_profile']} R{data['new_diameter']}"
    new_rim = f"{data['new_rim_width']}x{data['new_diameter']} ET {data['new_et']}"

    result_message = (
        "*–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —à–∏–Ω –∏ –¥–∏—Å–∫–æ–≤:*\n\n"
        "*–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:*\n\n"
        f"üìè –®–∏–Ω—ã: {current_tire}\n"
        f"üîç –î–∏—Å–∫–∏: {current_rim}\n"
        f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã: {data['current_width']} –º–º\n"
        f"‚ÜïÔ∏è –í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {current_profile_height:.1f} –º–º\n"
        f"üîÑ –î–∏–∞–º–µ—Ç—Ä: {current_total_diameter:.1f} –º–º\n"
        f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞: {current_rim_width_mm:.1f} –º–º\n\n"
        "*–ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:*\n\n"
        f"üìè –®–∏–Ω—ã: {new_tire}\n"
        f"üîç –î–∏—Å–∫–∏: {new_rim}\n"
        f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã: {data['new_width']} –º–º\n"
        f"‚ÜïÔ∏è –í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {new_profile_height:.1f} –º–º\n"
        f"üîÑ –î–∏–∞–º–µ—Ç—Ä: {new_total_diameter:.1f} –º–º\n"
        f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞: {new_rim_width_mm:.1f} –º–º\n\n"
        "*–°—Ä–∞–≤–Ω–µ–Ω–∏–µ:*\n\n"
        f"üîÑ –†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ: {diameter_diff_mm:+.1f} –º–º ({diameter_diff_percent:+.1f}%)\n"
        f"üöó –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞: {clearance_diff:+.1f} –º–º\n"
        f"‚è± –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞: {speed_diff_percent:+.1f}%\n"
        f"‚ÜîÔ∏è –†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞: {rim_width_diff_mm:+.1f} –º–º\n\n"
        f"{width_effects}\n\n"
        f"{profile_effects}\n\n"
        f"{clearance_effects}\n\n"
        f"*–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:*\n\n{recommendation}"
    )

    bot.send_message(message.chat.id, result_message, parse_mode='Markdown')
    
    save_tire_calculation_to_history(user_id, data, current_total_diameter, new_total_diameter, diameter_diff_mm, diameter_diff_percent)
    
    del user_data[user_id]
    view_tire_calc(message, show_description=False)

def save_tire_calculation_to_history(user_id, data, current_diameter, new_diameter, diff_mm, diff_percent):
    user_id_int = int(user_id)
    user_id_str = str(user_id)
    timestamp = datetime.now().strftime("%d.%m.%Y –≤ %H:%M")
    
    current_profile_height = data['current_width'] * (data['current_profile'] / 100)
    new_profile_height = data['new_width'] * (data['new_profile'] / 100)
    current_rim_width_mm = data['current_rim_width'] * 25.4
    new_rim_width_mm = data['new_rim_width'] * 25.4
    diameter_diff_mm = new_diameter - current_diameter
    diameter_diff_percent = (diameter_diff_mm / current_diameter) * 100
    clearance_diff = diameter_diff_mm / 2
    speed_diff_percent = -diameter_diff_percent
    rim_width_diff_mm = new_rim_width_mm - current_rim_width_mm
    recommendation = "‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç" if abs(diameter_diff_percent) <= 3 and abs(rim_width_diff_mm) <= 25.4 else "‚ö†Ô∏è –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ > 3% –∏–ª–∏ —à–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)"

    calculation_data = {
        'current_tire': f"{data['current_width']}/{data['current_profile']} R{data['current_diameter']}",
        'current_rim': f"{data['current_rim_width']}x{data['current_diameter']} ET {data['current_et']}",
        'new_tire': f"{data['new_width']}/{data['new_profile']} R{data['new_diameter']}",
        'new_rim': f"{data['new_rim_width']}x{data['new_diameter']} ET {data['new_et']}",
        'current_width': data['current_width'],
        'current_profile': data['current_profile'],
        'current_profile_height': round(current_profile_height, 1),
        'current_diameter': round(current_diameter, 1),
        'current_rim_width_mm': round(current_rim_width_mm, 1),
        'current_et': data['current_et'],
        'new_width': data['new_width'],
        'new_profile': data['new_profile'],
        'new_profile_height': round(new_profile_height, 1),
        'new_diameter': round(new_diameter, 1),
        'new_rim_width_mm': round(new_rim_width_mm, 1),
        'new_et': data['new_et'],
        'diameter_diff_mm': round(diameter_diff_mm, 1),
        'diameter_diff_percent': round(diameter_diff_percent, 1),
        'clearance_diff': round(clearance_diff, 1),
        'speed_diff_percent': round(speed_diff_percent, 1),
        'rim_width_diff_mm': round(rim_width_diff_mm, 1),
        'recommendation': recommendation,
        'timestamp': timestamp
    }

    if user_id_str not in user_history_tire:
        user_history_tire[user_id_str] = {
            'username': data.get('username', 'unknown'),
            'tire_calculations': []
        }
    elif 'tire_calculations' not in user_history_tire[user_id_str]:
        user_history_tire[user_id_str]['tire_calculations'] = []

    user_history_tire[user_id_str]['tire_calculations'].append(calculation_data)
    
    if not TIRE_HISTORY_PATH.endswith('tire_users.json'):
        raise ValueError("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —à–∏–Ω –≤ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª!")
    
    save_user_history_tires()
    save_tire_to_excel(user_id_str, calculation_data)

def save_tire_to_excel(user_id, calculation):
    file_path = os.path.join(TIRE_EXCEL_DIR, f"{user_id}_tires.xlsx")
    
    calculations = user_history_tire.get(user_id, {}).get('tire_calculations', [])
    
    columns = [
        "–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞",
        "–¢–µ–∫—É—â–∏–µ —à–∏–Ω—ã", "–¢–µ–∫—É—â–∏–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%)",
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
        "–ù–æ–≤—ã–µ —à–∏–Ω—ã", "–ù–æ–≤—ã–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%)",
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
        "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (–º–º)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (%)", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞ (–º–º)", "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞ (%)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞ (–º–º)",
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"
    ]
    
    new_calc_data = {
        "–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞": calculation['timestamp'],
        "–¢–µ–∫—É—â–∏–µ —à–∏–Ω—ã": calculation['current_tire'],
        "–¢–µ–∫—É—â–∏–µ –¥–∏—Å–∫–∏": calculation['current_rim'],
        "–®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calculation['current_width'],
        "–ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%)": calculation['current_profile'],
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calculation['current_profile_height'],
        "–î–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calculation['current_diameter'],
        "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–º–º)": calculation['current_rim_width_mm'],
        "–í—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)": calculation['current_et'],
        "–ù–æ–≤—ã–µ —à–∏–Ω—ã": calculation['new_tire'],
        "–ù–æ–≤—ã–µ –¥–∏—Å–∫–∏": calculation['new_rim'],
        "–®–∏—Ä–∏–Ω–∞ –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calculation['new_width'],
        "–ü—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%)": calculation['new_profile'],
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calculation['new_profile_height'],
        "–î–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calculation['new_diameter'],
        "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–º–º)": calculation['new_rim_width_mm'],
        "–í—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)": calculation['new_et'],
        "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (–º–º)": calculation['diameter_diff_mm'],
        "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (%)": calculation['diameter_diff_percent'],
        "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞ (–º–º)": calculation['clearance_diff'],
        "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞ (%)": calculation['speed_diff_percent'],
        "–†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞ (–º–º)": calculation['rim_width_diff_mm'],
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è": calculation['recommendation']
    }

    new_calc_df = pd.DataFrame([new_calc_data], columns=columns)
    
    if os.path.exists(file_path):
        existing_data = pd.read_excel(file_path).dropna(axis=1, how='all')
        existing_data = existing_data.reindex(columns=columns, fill_value=None)
        updated_data = pd.concat([existing_data, new_calc_df], ignore_index=True)
    else:
        updated_data = new_calc_df
    
    updated_data.to_excel(file_path, index=False)
    
    workbook = load_workbook(file_path)
    worksheet = workbook.active
    for column in worksheet.columns:
        max_length = max(len(str(cell.value)) for cell in column if cell.value) + 2
        worksheet.column_dimensions[column[0].column_letter].width = max_length
    for row in worksheet.iter_rows():
        for cell in row:
            cell.alignment = Alignment(horizontal="center", vertical="center")
    thick_border = Border(left=Side(style='thick'), right=Side(style='thick'),
                          top=Side(style='thick'), bottom=Side(style='thick'))
    for row in worksheet.iter_rows(min_col=worksheet.max_column-4, max_col=worksheet.max_column):
        for cell in row:
            cell.border = thick_border
    workbook.save(file_path)

def update_tire_excel_file(user_id):
    file_path = os.path.join(TIRE_EXCEL_DIR, f"{user_id}_tires.xlsx")
    calculations = user_history_tire.get(user_id, {}).get('tire_calculations', [])

    if not calculations:
        columns = [
            "–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞",
            "–¢–µ–∫—É—â–∏–µ —à–∏–Ω—ã", "–¢–µ–∫—É—â–∏–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%)",
            "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
            "–ù–æ–≤—ã–µ —à–∏–Ω—ã", "–ù–æ–≤—ã–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%)",
            "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
            "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (–º–º)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (%)", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞ (–º–º)", "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞ (%)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞ (–º–º)",
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"
        ]
        df = pd.DataFrame(columns=columns)
        df.to_excel(file_path, index=False)
        return

    columns = [
        "–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞",
        "–¢–µ–∫—É—â–∏–µ —à–∏–Ω—ã", "–¢–µ–∫—É—â–∏–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%)",
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
        "–ù–æ–≤—ã–µ —à–∏–Ω—ã", "–ù–æ–≤—ã–µ –¥–∏—Å–∫–∏", "–®–∏—Ä–∏–Ω–∞ –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–ü—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%)",
        "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–î–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)", "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–º–º)", "–í—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)",
        "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (–º–º)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (%)", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞ (–º–º)", "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞ (%)", "–†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞ (–º–º)",
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è"
    ]

    calc_records = []
    for calc in calculations:
        calc_data = {
            "–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞": calc['timestamp'],
            "–¢–µ–∫—É—â–∏–µ —à–∏–Ω—ã": calc['current_tire'],
            "–¢–µ–∫—É—â–∏–µ –¥–∏—Å–∫–∏": calc['current_rim'],
            "–®–∏—Ä–∏–Ω–∞ —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calc['current_width'],
            "–ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (%)": calc['current_profile'],
            "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calc['current_profile_height'],
            "–î–∏–∞–º–µ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à–∏–Ω (–º–º)": calc['current_diameter'],
            "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (–º–º)": calc['current_rim_width_mm'],
            "–í—ã–ª–µ—Ç —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)": calc['current_et'],
            "–ù–æ–≤—ã–µ —à–∏–Ω—ã": calc['new_tire'],
            "–ù–æ–≤—ã–µ –¥–∏—Å–∫–∏": calc['new_rim'],
            "–®–∏—Ä–∏–Ω–∞ –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calc['new_width'],
            "–ü—Ä–æ—Ñ–∏–ª—å –Ω–æ–≤—ã—Ö —à–∏–Ω (%)": calc['new_profile'],
            "–í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calc['new_profile_height'],
            "–î–∏–∞–º–µ—Ç—Ä –Ω–æ–≤—ã—Ö —à–∏–Ω (–º–º)": calc['new_diameter'],
            "–®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (–º–º)": calc['new_rim_width_mm'],
            "–í—ã–ª–µ—Ç –Ω–æ–≤—ã—Ö –¥–∏—Å–∫–æ–≤ (ET, –º–º)": calc['new_et'],
            "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (–º–º)": calc['diameter_diff_mm'],
            "–†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ (%)": calc['diameter_diff_percent'],
            "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞ (–º–º)": calc['clearance_diff'],
            "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞ (%)": calc['speed_diff_percent'],
            "–†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞ (–º–º)": calc['rim_width_diff_mm'],
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è": calc['recommendation']
        }
        calc_records.append(calc_data)

    df = pd.DataFrame(calc_records, columns=columns)
    df.to_excel(file_path, index=False)

    workbook = load_workbook(file_path)
    worksheet = workbook.active
    for column in worksheet.columns:
        max_length = max(len(str(cell.value)) for cell in column if cell.value) + 2
        worksheet.column_dimensions[column[0].column_letter].width = max_length
    for row in worksheet.iter_rows(min_row=2):
        for cell in row:
            cell.alignment = Alignment(horizontal='center', vertical='center')
    thick_border = Border(left=Side(style='thick'), right=Side(style='thick'),
                          top=Side(style='thick'), bottom=Side(style='thick'))
    for row in worksheet.iter_rows(min_row=2, min_col=len(columns)-4, max_col=len(columns)):
        for cell in row:
            cell.border = thick_border
    workbook.save(file_path)

# ------------------------------------------- –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–´_–®–ò–ù–´ (–ø—Ä–æ—Å–º–æ—Ç—Ä —à–∏–Ω) --------------------------------------------------

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä —à–∏–Ω")
@check_function_state_decorator('–ü—Ä–æ—Å–º–æ—Ç—Ä —à–∏–Ω')
@track_usage('–ü—Ä–æ—Å–º–æ—Ç—Ä —à–∏–Ω')
@restricted
@track_user_activity
@check_chat_state
@check_user_blocked
@log_user_actions
@check_subscription
@check_subscription_chanal
@text_only_handler
@rate_limit_with_captcha
def handle_view_tire_calc(message):
    user_id = str(message.from_user.id)
    if user_id not in user_history_tire or 'tire_calculations' not in user_history_tire[user_id] or not user_history_tire[user_id]['tire_calculations']:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return
    view_tire_calculations(message)

@text_only_handler
def view_tire_calculations(message):
    chat_id = message.chat.id
    user_id = str(message.from_user.id)

    if user_id not in user_history_tire or 'tire_calculations' not in user_history_tire[user_id] or not user_history_tire[user_id]['tire_calculations']:
        bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return

    calculations = user_history_tire[user_id]['tire_calculations']
    message_text = "*–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω:*\n\n"

    for i, calc in enumerate(calculations, 1):
        timestamp = calc['timestamp']
        message_text += f"üïí *‚Ññ{i}.* {timestamp}\n"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–®–∏–Ω—ã –≤ EXCEL')
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
    markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    msg = bot.send_message(chat_id, message_text, parse_mode='Markdown')
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –∞–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_view_tire_selection)

@text_only_handler
def process_view_tire_selection(message):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return
    if message.text == "–®–∏–Ω—ã –≤ EXCEL":
        send_tire_excel_file(message)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('–®–∏–Ω—ã –≤ EXCEL')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:", reply_markup=markup)
        bot.register_next_step_handler(msg, process_view_tire_selection)
        return

    chat_id = message.chat.id
    user_id = str(message.from_user.id)

    calculations = user_history_tire.get(user_id, {}).get('tire_calculations', [])
    if not calculations:
        bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return

    try:
        indices = [int(num.strip()) - 1 for num in message.text.split(',')]
        valid_indices = []
        invalid_indices = []

        for index in indices:
            if 0 <= index < len(calculations):
                valid_indices.append(index)
            else:
                invalid_indices.append(index + 1)

        if not valid_indices and invalid_indices:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add('–®–∏–Ω—ã –≤ EXCEL')
            markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
            markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
            markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            msg = bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup)
            bot.register_next_step_handler(msg, process_view_tire_selection)
            return

        if invalid_indices:
            invalid_str = ",".join(map(str, invalid_indices))
            bot.send_message(chat_id, f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ `{invalid_str}`! –û–Ω–∏ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã...", parse_mode='Markdown')

        for index in valid_indices:
            calc = calculations[index]
            required_keys = [
                'current_width', 'new_width', 'current_profile_height', 'new_profile_height',
                'current_diameter', 'new_diameter', 'current_rim_width_mm', 'new_rim_width_mm',
                'diameter_diff_mm', 'diameter_diff_percent', 'clearance_diff', 'speed_diff_percent',
                'rim_width_diff_mm', 'recommendation', 'current_tire', 'current_rim', 'new_tire', 'new_rim'
            ]
            for key in required_keys:
                if key not in calc:
                    bot.send_message(chat_id, f"‚ùå –î–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç–∞ ‚Ññ{index + 1} —É—Å—Ç–∞—Ä–µ–ª–∏ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã! –í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç!")
                    view_tire_calc(message, show_description=False)
                    return

            width_effects = ""
            if calc['new_width'] > calc['current_width']:
                width_effects = (
                    "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è —à–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã:*\n\n"
                    "‚úÖ –õ—É—á—à–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–∑–∞–¥–∏\n"
                    "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –∏ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–µ (–ª–µ—Ç–æ)\n"
                    "‚úÖ –£–≤–µ–ª–∏—á–∏—Ç—Å—è —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã —à–∏–Ω—ã\n"
                    "‚ùå –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—Å—è —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞\n"
                    "‚ùå –†–∏—Å–∫ –∑–∞—Ç–∏—Ä–∞–Ω–∏—è –ø–æ–¥–∫—Ä—ã–ª–∫–æ–≤\n"
                )
            elif calc['new_width'] < calc['current_width']:
                width_effects = (
                    "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è —à–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã:*\n\n"
                    "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ –Ω–∞ –ª—å–¥—É –∏ —Å–Ω–µ–≥—É\n"
                    "‚úÖ –£–º–µ–Ω—å—à–∏—Ç—Å—è —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞\n"
                    "‚ùå –£—Ö—É–¥—à–∏—Ç—Å—è —Å—Ü–µ–ø–ª–µ–Ω–∏–µ (–ª–µ—Ç–æ)\n"
                    "‚ùå –°–æ–∫—Ä–∞—Ç–∏—Ç—Å—è —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã —à–∏–Ω—ã\n"
                )

            profile_effects = ""
            if calc['new_profile_height'] > calc['current_profile_height']:
                profile_effects = (
                    "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è –≤—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è:*\n\n"
                    "‚úÖ –ú–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –º—è–≥—á–µ\n"
                    "‚úÖ –ú–µ–Ω—å—à–µ —Ä–∏—Å–∫ –ø–æ–≤—Ä–µ–¥–∏—Ç—å —à–∏–Ω—É/–¥–∏—Å–∫\n"
                    "‚ùå –•—É–∂–µ –¥–µ—Ä–∂–∏—Ç –¥–æ—Ä–æ–≥—É –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
                )
            elif calc['new_profile_height'] < calc['current_profile_height']:
                profile_effects = (
                    "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è –≤—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è:*\n\n"
                    "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å\n"
                    "‚ùå –ú–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –∂–µ—Å—Ç—á–µ\n"
                    "‚ùå –ë–æ–ª—å—à–µ —Ä–∏—Å–∫ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –¥–∏—Å–∫/—à–∏–Ω—É\n"
                )

            clearance_effects = ""
            if calc['clearance_diff'] > 0:
                clearance_effects = (
                    "üìà *–£–≤–µ–ª–∏—á–∏—Ç—Å—è –∫–ª–∏—Ä–µ–Ω—Å:*\n\n"
                    "‚úÖ –ö–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ –Ω–∞ —è–º–∞—Ö –∏ –±–µ–∑–¥–æ—Ä–æ–∂—å–µ\n"
                    "‚ùå –£—Ö—É–¥—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
                    "‚ùå –†–∏—Å–∫ –∑–∞—Ç–∏—Ä–∞–Ω–∏—è –ø–æ–¥–∫—Ä—ã–ª–∫–æ–≤\n"
                    f"‚ùå –°–ø–∏–¥–æ–º–µ—Ç—Ä –∑–∞–Ω–∏–∂–∞–µ—Ç –Ω–∞ {abs(calc['speed_diff_percent']):.1f}%\n"
                )
            elif calc['clearance_diff'] < 0:
                clearance_effects = (
                    "üìâ *–£–º–µ–Ω—å—à–∏—Ç—Å—è –∫–ª–∏—Ä–µ–Ω—Å:*\n\n"
                    "‚úÖ –£–ª—É—á—à–∏—Ç—Å—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏\n"
                    "‚ùå –ú–µ–Ω–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –Ω–∞ —è–º–∞—Ö\n"
                    f"‚ùå –°–ø–∏–¥–æ–º–µ—Ç—Ä –∑–∞–≤—ã—à–∞–µ—Ç –Ω–∞ {abs(calc['speed_diff_percent']):.1f}%\n"
                )

            result_message = (
                f"*üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —à–∏–Ω ‚Ññ{index + 1}:*\n\n"
                f"*–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:*\n\n"
                f"üìè –®–∏–Ω—ã: {calc['current_tire']}\n"
                f"üîç –î–∏—Å–∫–∏: {calc['current_rim']}\n"
                f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã: {calc['current_width']} –º–º\n"
                f"‚ÜïÔ∏è –í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {calc['current_profile_height']:.1f} –º–º\n"
                f"üîÑ –î–∏–∞–º–µ—Ç—Ä: {calc['current_diameter']:.1f} –º–º\n"
                f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞: {calc['current_rim_width_mm']:.1f} –º–º\n\n"
                f"*–ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:*\n\n"
                f"üìè –®–∏–Ω—ã: {calc['new_tire']}\n"
                f"üîç –î–∏—Å–∫–∏: {calc['new_rim']}\n"
                f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ —à–∏–Ω—ã: {calc['new_width']} –º–º\n"
                f"‚ÜïÔ∏è –í—ã—Å–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {calc['new_profile_height']:.1f} –º–º\n"
                f"üîÑ –î–∏–∞–º–µ—Ç—Ä: {calc['new_diameter']:.1f} –º–º\n"
                f"‚ÜîÔ∏è –®–∏—Ä–∏–Ω–∞ –æ–±–æ–¥–∞: {calc['new_rim_width_mm']:.1f} –º–º\n\n"
                f"*–°—Ä–∞–≤–Ω–µ–Ω–∏–µ:*\n\n"
                f"üîÑ –†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–∏–∞–º–µ—Ç—Ä–µ: {calc['diameter_diff_mm']:+.1f} –º–º ({calc['diameter_diff_percent']:+.1f}%)\n"
                f"üöó –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏—Ä–µ–Ω—Å–∞: {calc['clearance_diff']:+.1f} –º–º\n"
                f"‚è± –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ø–∏–¥–æ–º–µ—Ç—Ä–∞: {calc['speed_diff_percent']:+.1f}%\n"
                f"‚ÜîÔ∏è –†–∞–∑–Ω–∏—Ü–∞ –≤ —à–∏—Ä–∏–Ω–µ –æ–±–æ–¥–∞: {calc['rim_width_diff_mm']:+.1f} –º–º\n\n"
                f"{width_effects}\n\n"
                f"{profile_effects}\n\n"
                f"{clearance_effects}\n\n"
                f"*–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:*\n\n{calc['recommendation']}\n\n"
                f"üïí *–î–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞:* {calc['timestamp']}"
            )

            bot.send_message(chat_id, result_message, parse_mode='Markdown')

        view_tire_calc(message, show_description=False)

    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('–®–∏–Ω—ã –≤ EXCEL')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        msg = bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é", reply_markup=markup)
        bot.register_next_step_handler(msg, process_view_tire_selection)

@bot.message_handler(func=lambda message: message.text == "–®–∏–Ω—ã –≤ EXCEL")
@check_function_state_decorator('–®–∏–Ω—ã –≤ EXCEL')
@track_usage('–®–∏–Ω—ã –≤ EXCEL')
@restricted
@track_user_activity
@check_chat_state
@check_user_blocked
@log_user_actions
@check_subscription
@check_subscription_chanal
@text_only_handler
@rate_limit_with_captcha
def send_tire_excel_file(message):
    user_id = str(message.from_user.id)
    excel_file_path = os.path.join(TIRE_EXCEL_DIR, f"{user_id}_tires.xlsx")

    if os.path.exists(excel_file_path):
        with open(excel_file_path, 'rb') as excel_file:
            bot.send_document(message.chat.id, excel_file)
    else:
        bot.send_message(message.chat.id, "‚ùå –§–∞–π–ª Excel –Ω–µ –Ω–∞–π–¥–µ–Ω!\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã —à–∏–Ω")
    view_tire_calc(message, show_description=False)

# ------------------------------------------- –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–´_–®–ò–ù–´ (—É–¥–∞–ª–µ–Ω–∏–µ —à–∏–Ω) --------------------------------------------------

@bot.message_handler(func=lambda message: message.text == "–£–¥–∞–ª–µ–Ω–∏–µ —à–∏–Ω")
@check_function_state_decorator('–£–¥–∞–ª–µ–Ω–∏–µ —à–∏–Ω')
@track_usage('–£–¥–∞–ª–µ–Ω–∏–µ —à–∏–Ω')
@restricted
@track_user_activity
@check_chat_state
@check_user_blocked
@log_user_actions
@check_subscription
@check_subscription_chanal
@text_only_handler
@rate_limit_with_captcha
def handle_delete_tire_calc(message):
    user_id = str(message.from_user.id)
    if user_id not in user_history_tire or 'tire_calculations' not in user_history_tire[user_id] or not user_history_tire[user_id]['tire_calculations']:
        bot.send_message(message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return
    delete_tire_calculations(message)

@text_only_handler
def delete_tire_calculations(message):
    chat_id = message.chat.id
    user_id = str(message.from_user.id)

    if user_id not in user_history_tire or 'tire_calculations' not in user_history_tire[user_id] or not user_history_tire[user_id]['tire_calculations']:
        bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return

    calculations = user_history_tire[user_id]['tire_calculations']
    message_text = "*–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω:*\n\n"

    for i, calc in enumerate(calculations, 1):
        timestamp = calc['timestamp']
        message_text += f"üïí *‚Ññ{i}.* {timestamp}\n"

    msg = bot.send_message(chat_id, message_text, parse_mode='Markdown')
    bot.register_next_step_handler(msg, process_delete_tire_selection)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
    markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
    markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤:", reply_markup=markup)

@text_only_handler
def process_delete_tire_selection(message):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return_to_menu(message)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã":
        view_tire_calc(message, show_description=False)
        return
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã":
        return_to_calculators(message)
        return

    chat_id = message.chat.id
    user_id = str(message.from_user.id)

    calculations = user_history_tire.get(user_id, {}).get('tire_calculations', [])
    if not calculations:
        bot.send_message(chat_id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ —à–∏–Ω!")
        view_tire_calc(message, show_description=False)
        return

    try:
        indices = [int(num.strip()) - 1 for num in message.text.split(',')]
        valid_indices = []
        invalid_indices = []

        for index in indices:
            if 0 <= index < len(calculations):
                valid_indices.append(index)
            else:
                invalid_indices.append(index + 1)

        if not valid_indices and invalid_indices:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
            markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
            markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            msg = bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞", reply_markup=markup)
            bot.register_next_step_handler(msg, process_delete_tire_selection)
            return

        if invalid_indices:
            invalid_str = ",".join(map(str, invalid_indices))
            bot.send_message(chat_id, f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ `{invalid_str}`! –û–Ω–∏ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã...", parse_mode='Markdown')

        valid_indices.sort(reverse=True)
        for index in valid_indices:
            del calculations[index]

        save_user_history_tires()
        update_tire_excel_file(user_id)
        bot.send_message(chat_id, "‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã —à–∏–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        view_tire_calc(message, show_description=False)

    except ValueError:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —à–∏–Ω—ã')
        markup.add('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã')
        markup.add('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        msg = bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é", reply_markup=markup)
        bot.register_next_step_handler(msg, process_delete_tire_selection)